.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, 0.8);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s;

    // In case the browser supports #backdrop-filter, it will be used with a lighter background,
    // Otherwise #backdrop-filter won't be used, just a darker background in place of the blur effect
    // Graceful degradation
    @supports (backdrop-filter: blur(10px)) or
        (-webkit-backdrop-filter: blur(10px)) {
        -webkit-backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        background-color: rgba($color-black, 0.3);
    }

    &__content {
        @include center-horizontal;
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
        border-radius: 3px;
        // For left & right to have the same height, we mimic a table
        display: table;
        // So that the image wont cover the rounded borders on the left side
        overflow: hidden;
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
        // The last property in the shorthand syntax is the delay - it lets the dark background come in first, before the popup box
        transition: all 0.4s 0.2s;
    }

    &__left {
        width: 33.333333%;
        // Both left & right are mimiced as a table-cell - in order for them to have the same height
        display: table-cell;
    }

    &__right {
        width: 66.666667%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem;
        -moz-column-rule: 1px solid $color-grey-light-2;
        column-count: 2;
        column-gap: 4rem;
        column-rule: 1px solid $color-grey-light-2;

        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }

    // Make the popup visible whenever it becomes the "target"
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // Style the child-element when "popup" becomes the "target"
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark-1;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all 0.2s;
            line-height: 1rem;
        }

        &:hover {
            color: $color-primary;
        }
    }
}
