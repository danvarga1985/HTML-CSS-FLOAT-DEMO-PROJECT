/* 
COLORS 

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    /* font properties are never defined under the "*" selector  */
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 60px;
}

.header {
    /* 95% of the viewport height */
    height: 95vh;
    background-image: linear-gradient(to right bottom, #7ed56fbc, #28b485b7), url("../img/hero.jpg");
    /* whatever the width of the viewport, the element will always fit inside the box */
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    /* 1. top left corner of the element will start at the middle of the screen */
    top: 40%;
    left: 50%;
    /* 2. then shift the element back 50%, so that the element is in the middle of the screen */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: white;
    text-transform: uppercase;
    
    /* backface-visibility: hidden; */
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.5px;
    /* shorthand syntax */
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    /* rounded corners */
    border-radius: 100px;
    /* all properties are enabled to be animated */
    transition: all .2s;
    /* set to relative, so that ".btn::after" won't refer to header */
    position:relative;
}

.btn:hover {
    /* Upon hover, the button goes slightly up */
    transform: translateY(-3px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn:active {
    /* When clicked on the button, it already went 3px up (hover) - upon click it goes down 2px compared to the hover state */
    transform: translateY(-1px);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    /* absolute compared to parent element (".btn:visited") */
    position: absolute;
    top: 0;
    left: 0;
    /* so that the text in the button is not covered by this */
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    /* change the size in different directions */
    transform: scaleX(1.4) scaleY(1.6);
    /* fade it out */
    opacity: 0;
}

.btn-animated {
    animation: moveInButton .5s ease-out .75s;
    /* automatically apply the styles of the 0% before the animation starts - no more split-second visibility on screen during rendering */
    animation-fill-mode: backwards;
}

@keyframes moveInButton {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

